; =======================================================
; Supervisor configuration for CKAN background job worker
; =======================================================

; 1. Copy this file to /etc/supervisor/conf.d
; 2. Make sure the paths below match your setup

[unix_http_server]
file=/tmp/supervisor.sock   ; (the path to the socket file)
chmod=0700                       ; sockef file mode (default 0700)

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket

[supervisord]
nodaemon=true
user=ckan
logfile=/srv/app/logs/supervisord.log
pidfile=/tmp/supervisor.pid

[program:ckan-worker]

; Use the full paths to the virtualenv and your configuration file here.
command=ckan -c /srv/app/ckan.ini jobs worker


; User the worker runs as. is optional uncommented cause docker container has no default user www-data
;user=www-data


; Start just a single worker. Increase this number if you have many or
; particularly long running background jobs.
numprocs=1
process_name=%(program_name)s-%(process_num)02d


; Log files.
stdout_logfile=/srv/app/logs/ckan-worker.stdout.log
stderr_logfile=/srv/app/logs/ckan-worker.stderr.log


; Make sure that the worker is started on system start and automatically
; restarted if it crashes unexpectedly.
autostart=true
autorestart=true


; Number of seconds the process has to run before it is considered to have
; started successfully.
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600


; ===============================
; ckan harvester
; ===============================

[program:ckan_gather_consumer]

command=ckan --config=/srv/app/ckan.ini harvester gather-consumer

; user that owns virtual environment.
#user=ckan

numprocs=1
stdout_logfile=/srv/app/logs/gather_consumer.log
stderr_logfile=/srv/app/logs/gather_consumer.log
autostart=true
autorestart=true
startsecs=10

[program:ckan_fetch_consumer]

command=ckan --config=/srv/app/ckan.ini harvester fetch-consumer

; user that owns virtual environment.
#user=ckan

numprocs=1
stdout_logfile=/srv/app/logs/fetch_consumer.log
stderr_logfile=/srv/app/logs/fetch_consumer.log
autostart=true
autorestart=true
startsecs=10